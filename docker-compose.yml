version: '3.7'

volumes:
  grafana_data: {}
  prometheus_data: {}
  gitlab_data: {}
  teamcity_data: {}
  nexus-data: {}

services:
  gitlab:
    image: gitlab/gitlab-ce:latest
    restart: always
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.example.com:8002'
        gitlab_rails['gitlab_shell_ssh_port'] = 2223
    ports:
      - '8002:8002'
      - '2223:2223'
    volumes:
      - './gitlab/config:/etc/gitlab'
      - '/var/logs/gitlab/:/var/log/gitlab'
      - 'gitlab_data:/var/opt/gitlab'
  
  nexus:
      restart: always
      image: sonatype/nexus3
      volumes:
        - nexus-data:/sonatype-work
      env_file: 
        ./nexus/env
      network_mode: "host"

  teamcity:
      restart: always
      image: jetbrains/teamcity-server
      volumes:
        - teamcity_data:/data/teamcity_server/datadir
        - /opt/teamcity/log_dir:/opt/teamcity/logs
      network_mode: "host"

  teamcity-agent:
      image: jetbrains/teamcity-agent
      environment:
        - SERVER_URL=http://10.10.0.3:8111
        - AGENT_NAME=workspace_docker
      network_mode: "host"

  grafana:
    image: grafana/grafana
    user: "104"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    network_mode: "host"

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: always
    network_mode: "host"

  alertmanager:
    image: prom/alertmanager
    network_mode: "host"
    restart: always
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - cadvisor
      - alertmanager
    restart: always
    network_mode: "host"

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    network_mode: "host"
    restart: always
